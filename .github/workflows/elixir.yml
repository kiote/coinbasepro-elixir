name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.11.3' # Define the elixir version [required]
        otp-version: '23.3' # Define the OTP version [required]
    - name: Restore dependencies cache
      id: mix-cache # id to use in retrieve action
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Check format
      run: mix format --check-formatted
    - name: Credo checks
      run: mix credo --strict
    
    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Dialyzer
      run: mix dialyzer --no-check --halt-exit-status

    - name: Generate Coverage Report
      run: MIX_ENV=test mix do compile --warnings-as-errors, coveralls.json -u
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        file: ./cover/excoveralls.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true